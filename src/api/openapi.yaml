openapi: 3.0.0
info:
  title: Servico
  description: Carteira de livros/filmes
  contact:
    name: "A033882,A037672,A033005"
    email: a033882@ismai.pt
  version: 0.0.1
servers:
- url: http://localhost:8080
  description: My localhost
  variables:
    basePath:
      default: /
paths:
  /filmes:
    get:
      tags:
      - FilmesController
      summary: Retrieve filmes
      operationId: retrieveFilmes
      responses:
        "200":
          description: Array of Filmes model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Filme'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                xml:
                  name: Filmes
                items:
                  $ref: '#/components/schemas/Filme'
      x-swagger-router-controller: FilmesController
    post:
      tags:
      - FilmesController
      summary: Create filme
      operationId: createFilme
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filme'
          application/xml:
            schema:
              $ref: '#/components/schemas/Filme'
      responses:
        "200":
          description: Create a Filme model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filme'
            application/xml:
              schema:
                $ref: '#/components/schemas/Filme'
      x-swagger-router-controller: FilmesController
  /filmes/{id}:
    get:
      tags:
      - FilmesController
      summary: Retrieve filme
      operationId: retrieveFilme
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Retrieve Filme id 1
            value: 1
          two:
            summary: Retrieve Filme id 2
            value: 2
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filme'
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: FilmesController
    put:
      tags:
      - FilmesController
      summary: Update filme
      operationId: updateFilme
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Update Filme id 1
            value: 1
          two:
            summary: Update Filme id 2
            value: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filme'
            examples:
              FilmeExample01:
                $ref: '#/components/examples/FilmeExemple01'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: Filme PUT success
                x-content-type: application/json
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: FilmesController
    delete:
      tags:
      - FilmesController
      summary: Delete filme
      operationId: deleteFilme
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Delete Filme id 1
            value: 1
          two:
            summary: Delete Filme id 2
            value: 2
      responses:
        "204":
          description: No Content
        "404":
          description: id not found
      x-swagger-router-controller: FilmesController
  /cinemas:
    get:
      tags:
      - CinemasController
      summary: Retrieve Cinemas
      operationId: retrieveCinemas
      responses:
        "200":
          description: Array of Cinemas model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cinema'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                xml:
                  name: Cinemas
                items:
                  $ref: '#/components/schemas/Cinema'
      x-swagger-router-controller: CinemasController
    post:
      tags:
      - CinemasController
      summary: Create Cinema
      operationId: createCinema
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cinema'
          application/xml:
            schema:
              $ref: '#/components/schemas/Cinema'
      responses:
        "200":
          description: Create a Cinema model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cinema'
            application/xml:
              schema:
                $ref: '#/components/schemas/Cinema'
      x-swagger-router-controller: CinemasController
  /Cinemas/{id}:
    get:
      tags:
      - CinemasController
      summary: Retrieve Cinema
      operationId: retrieveCinema
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Retrieve Cinema id 1
            value: 1
          two:
            summary: Retrieve Cinema id 2
            value: 2
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cinema'
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: CinemasController
    put:
      tags:
      - CinemasController
      summary: Update Cinema
      operationId: updateCinema
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Update Cinema id 1
            value: 1
          two:
            summary: Update Cinema id 2
            value: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cinema'
            examples:
              CinemaExample01:
                $ref: '#/components/examples/CinemaExemple01'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: Cinema PUT success
                x-content-type: application/json
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: CinemasController
    delete:
      tags:
      - CinemasController
      summary: Delete Cinema
      operationId: deleteCinema
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Delete Cinema id 1
            value: 1
          two:
            summary: Delete Cinema id 2
            value: 2
      responses:
        "204":
          description: No Content
        "404":
          description: id not found
      x-swagger-router-controller: CinemasController
  /Temas:
    get:
      tags:
      - TemasController
      summary: Retrieve Temas
      operationId: retrieveTemas
      responses:
        "200":
          description: Array of Temas model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tema'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                xml:
                  name: Temas
                items:
                  $ref: '#/components/schemas/Tema'
      x-swagger-router-controller: TemasController
    post:
      tags:
      - TemasController
      summary: Create Tema
      operationId: createTema
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tema'
          application/xml:
            schema:
              $ref: '#/components/schemas/Tema'
      responses:
        "200":
          description: Create a Tema model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tema'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tema'
      x-swagger-router-controller: TemasController
  /Temas/{id}:
    get:
      tags:
      - TemasController
      summary: Retrieve Tema
      operationId: retrieveTema
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Retrieve Tema id 1
            value: 1
          two:
            summary: Retrieve Tema id 2
            value: 2
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tema'
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: TemasController
    put:
      tags:
      - TemasController
      summary: Update Temas
      operationId: updateTema
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Update Tema id 1
            value: 1
          two:
            summary: Update Tema id 2
            value: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tema'
            examples:
              TemaExample01:
                $ref: '#/components/examples/TemaExemple01'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: Tema PUT success
                x-content-type: application/json
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: TemasController
    delete:
      tags:
      - TemasController
      summary: Delete Tema
      operationId: deleteTema
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Delete Tema id 1
            value: 1
          two:
            summary: Delete Tema id 2
            value: 2
      responses:
        "204":
          description: No Content
        "404":
          description: id not found
      x-swagger-router-controller: TemasController
  /Carteiras:
    get:
      tags:
      - CarteirasController
      summary: Retrieve Carteiras
      operationId: retrieveCarteiras
      responses:
        "200":
          description: Array of Carteiras model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Carteira'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                xml:
                  name: Carteiras
                items:
                  $ref: '#/components/schemas/Carteira'
      x-swagger-router-controller: CarteirasController
    post:
      tags:
      - CarteirasController
      summary: Create Carteira
      operationId: createCarteira
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Carteira'
          application/xml:
            schema:
              $ref: '#/components/schemas/Carteira'
      responses:
        "200":
          description: Create a Carteira model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carteira'
            application/xml:
              schema:
                $ref: '#/components/schemas/Carteira'
      x-swagger-router-controller: CarteirasController
  /Carteiras/{id}:
    get:
      tags:
      - CarteirasController
      summary: Retrieve Carteira
      operationId: retrieveCarteira
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Retrieve Carteira id 1
            value: 1
          two:
            summary: Retrieve Carteira id 2
            value: 2
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carteira'
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: CarteirasController
    put:
      tags:
      - CarteirasController
      summary: Update Carteira
      operationId: updateCarteira
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Update Carteira id 1
            value: 1
          two:
            summary: Update Carteira id 2
            value: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Carteira'
            examples:
              CarteirasExample01:
                $ref: '#/components/examples/CarteiraExemple01'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: Carteira PUT success
                x-content-type: application/json
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: CarteirasController
    delete:
      tags:
      - CarteirasController
      summary: Delete Carteira
      operationId: deleteCarteira
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Delete Carteira id 1
            value: 1
          two:
            summary: Delete Carteira id 2
            value: 2
      responses:
        "204":
          description: No Content
        "404":
          description: id not found
      x-swagger-router-controller: CarteirasController
  /Utilizadores:
    get:
      tags:
      - UtilizadoresController
      summary: Retrieve Utilizadores
      operationId: retrieveUtilizadores
      responses:
        "200":
          description: Array of Utilizadores model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Utilizador'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                xml:
                  name: Utilizadores
                items:
                  $ref: '#/components/schemas/Utilizador'
      x-swagger-router-controller: UtilizadoresController
    post:
      tags:
      - UtilizadoresController
      summary: Create Utilizador
      operationId: createUtilizador
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Utilizador'
          application/xml:
            schema:
              $ref: '#/components/schemas/Utilizador'
      responses:
        "200":
          description: Create a Utilizador model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Utilizador'
            application/xml:
              schema:
                $ref: '#/components/schemas/Utilizador'
      x-swagger-router-controller: UtilizadoresController
  /Utilizadores/{id}:
    get:
      tags:
      - UtilizadoresController
      summary: Retrieve Utilizador
      operationId: retrieveUtilizador
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Retrieve Utilizador id 1
            value: 1
          two:
            summary: Retrieve Utilizador id 2
            value: 2
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Utilizador'
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: UtilizadoresController
    put:
      tags:
      - UtilizadoresController
      summary: Update Utilizador
      operationId: updateUtilizador
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Update Utilizador id 1
            value: 1
          two:
            summary: Update Utilizador id 2
            value: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Utilizador'
            examples:
              UtilizadorExample01:
                $ref: '#/components/examples/UtilizadorExemple01'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: Utilizador PUT success
                x-content-type: application/json
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: UtilizadoresController
    delete:
      tags:
      - UtilizadoresController
      summary: Delete Utilizador
      operationId: deleteUtilizador
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Delete Utilizador id 1
            value: 1
          two:
            summary: Delete Utilizador id 2
            value: 2
      responses:
        "204":
          description: No Content
        "404":
          description: id not found
      x-swagger-router-controller: UtilizadoresController
  /Livros:
    get:
      tags:
      - LivrosController
      summary: Retrieve Livros
      operationId: retrieveLivros
      responses:
        "200":
          description: Array of Livros model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Livro'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                xml:
                  name: Livros
                items:
                  $ref: '#/components/schemas/Livro'
      x-swagger-router-controller: LivrosController
    post:
      tags:
      - LivrosController
      summary: Create Livro
      operationId: createLivro
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Livro'
          application/xml:
            schema:
              $ref: '#/components/schemas/Livro'
      responses:
        "200":
          description: Create a Livro model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Livro'
            application/xml:
              schema:
                $ref: '#/components/schemas/Livro'
      x-swagger-router-controller: LivrosController
  /Livros/{isbn}:
    get:
      tags:
      - LivrosController
      summary: Retrieve Livro
      operationId: retrieveLivro
      parameters:
      - name: isbn
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Retrieve Livro isbn 1
            value: 1
          two:
            summary: Retrieve Livro isbn 2
            value: 2
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Livro'
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: LivrosController
    put:
      tags:
      - LivrosController
      summary: Update Livro
      operationId: updateLivro
      parameters:
      - name: isbn
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Update Livro isbn 1
            value: 1
          two:
            summary: Update Livro isbn 2
            value: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Livro'
            examples:
              LivroExample01:
                $ref: '#/components/examples/LivroExemple01'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: Livro PUT success
                x-content-type: application/json
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: LivrosController
    delete:
      tags:
      - LivrosController
      summary: Delete Livro
      operationId: deleteLivro
      parameters:
      - name: isbn
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Delete Livro isbn 1
            value: 1
          two:
            summary: Delete Livro isbn 2
            value: 2
      responses:
        "204":
          description: No Content
        "404":
          description: id not found
      x-swagger-router-controller: LivrosController
  /Servicos:
    get:
      tags:
      - ServicosController
      summary: Retrieve Servicos
      operationId: retrieveServicos
      responses:
        "200":
          description: Array of Servicos model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Servico'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                xml:
                  name: Servicos
                items:
                  $ref: '#/components/schemas/Servico'
      x-swagger-router-controller: ServicosController
    post:
      tags:
      - ServicosController
      summary: Create Servico
      operationId: createServico
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Servico'
          application/xml:
            schema:
              $ref: '#/components/schemas/Servico'
      responses:
        "200":
          description: Create a Servico model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Servico'
            application/xml:
              schema:
                $ref: '#/components/schemas/Servico'
      x-swagger-router-controller: ServicosController
  /Servicos/{id}:
    get:
      tags:
      - ServicosController
      summary: Retrieve Servico
      operationId: retrieveServico
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Retrieve Servico id 1
            value: 1
          two:
            summary: Retrieve Servico id 2
            value: 2
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Servico'
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: ServicosController
    put:
      tags:
      - ServicosController
      summary: Update Servico
      operationId: updateServico
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Update Servico id 1
            value: 1
          two:
            summary: Update Servico id 2
            value: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Servico'
            examples:
              ServicoExample01:
                $ref: '#/components/examples/ServicoExemple01'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: Servico PUT success
                x-content-type: application/json
        "400":
          description: Bad request
        "404":
          description: id not found
      x-swagger-router-controller: ServicosController
    delete:
      tags:
      - ServicosController
      summary: Delete Servico
      operationId: deleteServico
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
        examples:
          one:
            summary: Delete Servico id 1
            value: 1
          two:
            summary: Delete Servico id 2
            value: 2
      responses:
        "204":
          description: No Content
        "404":
          description: id not found
      x-swagger-router-controller: ServicosController
components:
  schemas:
    Utilizador:
      title: Utilizador
      required:
      - email
      - nome
      - password
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        password:
          type: string
          format: password
      additionalProperties: false
      example:
        password: ""
        nome: nome
        id: 0
        email: email
    Carteira:
      title: Carteira
      required:
      - data
      type: object
      properties:
        id:
          type: integer
          format: int64
        data:
          type: string
          format: date-time
        numerofilmes:
          type: integer
          format: int64
        numerolivros:
          type: integer
          format: int64
      additionalProperties: false
      example:
        data: 2000-01-23T04:56:07.000+00:00
        numerolivros: 1
        id: 0
        numerofilmes: 6
    Filme:
      title: Filme
      required:
      - ano
      - nome
      - produtora
      - realizador
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        realizador:
          type: string
        produtora:
          type: string
        elenco:
          type: string
        ano:
          type: string
      additionalProperties: false
      example:
        ano: ano
        elenco: elenco
        nome: nome
        id: 0
        realizador: realizador
        produtora: produtora
    Cinema:
      title: Cinema
      required:
      - local
      - nome
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        local:
          type: string
        horario:
          type: string
      additionalProperties: false
      example:
        horario: horario
        nome: nome
        id: 0
        local: local
    Tema:
      title: Tema
      required:
      - nome
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        descrição:
          type: string
      additionalProperties: false
      example:
        descrição: descrição
        nome: nome
        id: 0
    Livro:
      title: Livro
      required:
      - editora
      - escritor
      - titulo
      type: object
      properties:
        isbn:
          type: integer
          format: int64
        titulo:
          type: string
        escritor:
          type: string
        editora:
          type: string
      additionalProperties: false
      example:
        escritor: escritor
        isbn: 0
        titulo: titulo
        editora: editora
    Servico:
      title: Servico
      required:
      - morada
      - nome
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        morada:
          type: string
        horario:
          type: string
        emprestimo:
          type: string
      additionalProperties: false
      example:
        horario: horario
        emprestimo: emprestimo
        nome: nome
        id: 0
        morada: morada
  examples:
    UtilizadorExemple01:
      value:
        id: 1
        nome: Tim Macedo
        email: timsupermacedo@hotmail.com
        password: "1234"
    FilmeExemple01:
      value:
        id: 1
        nome: Jaws
        realizador: Steven Spielberg
        produtora: Universal Pictures
        elenco: "Roy Scheider,Robert Shaw,Richard Dreyfuss,Lorraine Gary,Murray Hamilton"
        ano: "1975"
    CinemaExemple01:
      value:
        id: 1
        nome: Lusomundo Norteshopping
        local: Matosinhos
        horario: 10:00 - 23:00
    CarteiraExemple01:
      value:
        id: 1
        data: 02-05-2021
        numerofilmes: 5
        numerolivros: 12
    TemaExemple01:
      value:
        id: 1
        nome: Acção
        descrição: "Porrada, tiros e explosões."
    LivroExemple01:
      value:
        isbn: "0747532699"
        titulo: Harry Potter - Pedra filosofal
        escritor: J. K. Rowling
        editora: Bloomsbury
    ServicoExemple01:
      value:
        id: 1
        nome: Biblioteca Municipal V.N. Famalicão
        morada: Famalicão
        horario: 11:00 - 17:00
        emprestimo: 7 dias
